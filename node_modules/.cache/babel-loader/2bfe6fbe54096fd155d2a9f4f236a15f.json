{"ast":null,"code":"var _jsxFileName = \"/Users/Raila/martingale-calculator/src/components/Chart/index.js\";\nimport React, { useState } from \"react\";\nimport { Line } from 'react-chartjs-2';\n\nconst Chart = props => {\n  var aux = [];\n\n  for (var i = 0; i < props.steps.length; i++) {\n    aux[i] = props.steps[i].toFixed(2);\n  }\n\n  const data = {\n    labels: Array.from({\n      length: props.steps.length\n    }, (v, k) => k),\n    datasets: [{\n      label: '',\n      fill: false,\n      lineTension: 0.2,\n      backgroundColor: 'rgba(75,192,192,0.4)',\n      borderColor: 'rgba(75,192,192,1)',\n      borderCapStyle: 'butt',\n      borderDash: [],\n      borderDashOffset: 0.0,\n      borderJoinStyle: 'miter',\n      pointBorderColor: 'rgba(75,192,192,1)',\n      pointBackgroundColor: '#fff',\n      pointBorderWidth: 1,\n      pointHoverRadius: 5,\n      pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n      pointHoverBorderColor: 'rgba(220,220,220,1)',\n      pointHoverBorderWidth: 2,\n      pointRadius: 1,\n      pointHitRadius: 10,\n      data: aux\n    }]\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, \"Line Example\"), /*#__PURE__*/React.createElement(Line, {\n    data: data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default Chart;","map":{"version":3,"sources":["/Users/Raila/martingale-calculator/src/components/Chart/index.js"],"names":["React","useState","Line","Chart","props","aux","i","steps","length","toFixed","data","labels","Array","from","v","k","datasets","label","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA+B,OAA/B;AACA,SAASC,IAAT,QAAoB,iBAApB;;AACA,MAAMC,KAAK,GAAGC,KAAD,IAAU;AAEnB,MAAIC,GAAG,GAAC,EAAR;;AACA,OAAM,IAAIC,CAAC,GAAC,CAAZ,EAAeA,CAAC,GAACF,KAAK,CAACG,KAAN,CAAYC,MAA7B,EAAqCF,CAAC,EAAtC,EAAyC;AAErCD,IAAAA,GAAG,CAACC,CAAD,CAAH,GAAOF,KAAK,CAACG,KAAN,CAAYD,CAAZ,EAAeG,OAAf,CAAuB,CAAvB,CAAP;AACH;;AAGD,QAAMC,IAAI,GAAG;AACTC,IAAAA,MAAM,EAAEC,KAAK,CAACC,IAAN,CAAW;AAACL,MAAAA,MAAM,EAAEJ,KAAK,CAACG,KAAN,CAAYC;AAArB,KAAX,EAAyC,CAACM,CAAD,EAAIC,CAAJ,KAAUA,CAAnD,CADC;AAETC,IAAAA,QAAQ,EAAE,CACR;AACEC,MAAAA,KAAK,EAAE,EADT;AAEEC,MAAAA,IAAI,EAAE,KAFR;AAGEC,MAAAA,WAAW,EAAE,GAHf;AAIEC,MAAAA,eAAe,EAAE,sBAJnB;AAKEC,MAAAA,WAAW,EAAE,oBALf;AAMEC,MAAAA,cAAc,EAAE,MANlB;AAOEC,MAAAA,UAAU,EAAE,EAPd;AAQEC,MAAAA,gBAAgB,EAAE,GARpB;AASEC,MAAAA,eAAe,EAAE,OATnB;AAUEC,MAAAA,gBAAgB,EAAE,oBAVpB;AAWEC,MAAAA,oBAAoB,EAAE,MAXxB;AAYEC,MAAAA,gBAAgB,EAAE,CAZpB;AAaEC,MAAAA,gBAAgB,EAAE,CAbpB;AAcEC,MAAAA,yBAAyB,EAAE,oBAd7B;AAeEC,MAAAA,qBAAqB,EAAE,qBAfzB;AAgBEC,MAAAA,qBAAqB,EAAE,CAhBzB;AAiBEC,MAAAA,WAAW,EAAE,CAjBf;AAkBEC,MAAAA,cAAc,EAAE,EAlBlB;AAmBExB,MAAAA,IAAI,EAACL;AAnBP,KADQ;AAFD,GAAb;AA2BA,sBAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADA,eAEA,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAEK,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,CAFJ;AASH,CA7CD;;AA+CA,eAAeP,KAAf","sourcesContent":["import React, {useState } from \"react\";\nimport { Line} from 'react-chartjs-2';\nconst Chart =(props)=> {\n\n    var aux=[];\n    for ( var i=0; i<props.steps.length; i++){\n\n        aux[i]=props.steps[i].toFixed(2)\n    }\n    \n  \n    const data = {\n        labels: Array.from({length: props.steps.length}, (v, k) => k),\n        datasets: [\n          {\n            label: '',\n            fill: false,\n            lineTension: 0.2,\n            backgroundColor: 'rgba(75,192,192,0.4)',\n            borderColor: 'rgba(75,192,192,1)',\n            borderCapStyle: 'butt',\n            borderDash: [],\n            borderDashOffset: 0.0,\n            borderJoinStyle: 'miter',\n            pointBorderColor: 'rgba(75,192,192,1)',\n            pointBackgroundColor: '#fff',\n            pointBorderWidth: 1,\n            pointHoverRadius: 5,\n            pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n            pointHoverBorderColor: 'rgba(220,220,220,1)',\n            pointHoverBorderWidth: 2,\n            pointRadius: 1,\n            pointHitRadius: 10,\n            data:aux\n          }\n        ]\n      };\n      \n    return (\n\n        <div>\n        <h2>Line Example</h2>\n        <Line data={data} />\n      </div>\n    );\n\n\n}\n\nexport default Chart"]},"metadata":{},"sourceType":"module"}