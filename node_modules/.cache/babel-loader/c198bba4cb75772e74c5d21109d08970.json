{"ast":null,"code":"var _jsxFileName = \"/Users/Raila/martingale-calculator/src/components/Form/index.js\";\nimport React, { useState, useEffect } from \"react\";\n\nconst Form = ({\n  calcular\n}, props) => {\n  const [minimumInvestment, setMinimumInvestment] = useState('');\n  const [payout, setPayout] = useState('');\n  const [stepsN, setStepsN] = useState('');\n  const [maximumInvestment] = useState('');\n  const [enteredText, setEnteredText] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    props.calcular(minimumInvestment, payout, stepsN, maximumInvestment);\n  };\n\n  useEffect(() => {\n    const subscription = props.stepsO();\n    return () => {\n      // Limpa a assinatura antes do componente deixar a tela\n      subscription.unsubscribe();\n    };\n  });\n  const [error, setError] = useState();\n\n  function handleStepsN(stepsN, name) {\n    setEnteredText(stepsN);\n\n    if (isNaN(stepsN)) {\n      setError(`${name} campo deve ser numérico `);\n    } else {\n      setError(\"\");\n    }\n\n    if (stepsN > 30) {\n      //alert(\"numero de passos excedido\")\n      setError(`O número de passos deve ser menor que 30 `);\n      setEnteredText(\"\");\n      return null;\n    } else {\n      setStepsN(stepsN);\n    }\n  }\n\n  console.log(payout);\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, \"Investimento M\\xEDnimo:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"exemplo 10.00\",\n    onChange: e => setMinimumInvestment(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, \"Rendimento:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \" % exemplo 70\",\n    onChange: e => setPayout(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, \"N\\xFAmero de Passos: \"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"passos\",\n    value: enteredText,\n    type: \"text\",\n    placeholder: \" exemplo 5\",\n    onChange: e => handleStepsN(e.target.value, e.target.name),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, error !== \"\" ? error : \"\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"btn\",\n    type: \"submit\",\n    value: \"calcular\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default Form;","map":{"version":3,"sources":["/Users/Raila/martingale-calculator/src/components/Form/index.js"],"names":["React","useState","useEffect","Form","calcular","props","minimumInvestment","setMinimumInvestment","payout","setPayout","stepsN","setStepsN","maximumInvestment","enteredText","setEnteredText","handleSubmit","e","preventDefault","subscription","stepsO","unsubscribe","error","setError","handleStepsN","name","isNaN","console","log","target","value"],"mappings":"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","sourcesContent":["import React, {useState,useEffect}from \"react\";\n\nconst Form =({calcular},props)=> {\n    const [minimumInvestment, setMinimumInvestment] = useState('');\n    const [payout, setPayout] = useState('');\n    const [stepsN, setStepsN] = useState('');\n    const [maximumInvestment] = useState('');\n    const [enteredText, setEnteredText] = useState(''); \n    const handleSubmit =(e) =>{\n        e.preventDefault()\n        props.calcular(minimumInvestment, payout, stepsN, maximumInvestment);\n\n    \n    }\n    useEffect(() => {\n      const subscription = props.stepsO();\n      return () => {\n        // Limpa a assinatura antes do componente deixar a tela\n        subscription.unsubscribe();\n      };\n    });\n    const [error,setError] = useState();\n\n\n    function handleStepsN(stepsN,name){\n      setEnteredText(stepsN)\n      if (isNaN(stepsN)) {\n        setError(`${name} campo deve ser numérico `);\n      }else{\n        setError(\"\")\n      }\n     \n      if (stepsN>30){\n        //alert(\"numero de passos excedido\")\n        \n        setError(`O número de passos deve ser menor que 30 `);\n        setEnteredText(\"\");\n       return null;\n      \n      }else{\n\n        setStepsN(stepsN);\n      }\n     \n    }\n    console.log(payout)\n  return (\n    <form onSubmit={handleSubmit}>\n        <div className=\"input-block\">\n        <label>Investimento Mínimo:</label>\n        <input type=\"text\" placeholder=\"exemplo 10.00\" onChange={e => setMinimumInvestment(e.target.value)}></input>\n        <label>Rendimento:</label>\n        <input type=\"text\" placeholder=\" % exemplo 70\" onChange={e => setPayout(e.target.value,)}></input>\n        <label>Número de Passos: </label>\n     \n        <input name=\"passos\" value={enteredText} type=\"text\" placeholder=\" exemplo 5\" onChange={e => handleStepsN(e.target.value, e.target.name)} ></input>\n        <span >{error!==\"\"? error:\"\"}</span>\n         \n        </div>\n        <br/>\n        <input  className=\"btn\" type=\"submit\" value =\"calcular\"></input>\n        \n    </form>\n\n\n  );\n}\n\nexport default Form"]},"metadata":{},"sourceType":"module"}