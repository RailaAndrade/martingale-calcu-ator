{"ast":null,"code":"var _jsxFileName = \"/Users/Raila/martingale-calculator/src/components/Form/index.js\";\nimport React, { useState } from \"react\";\n\nconst Form = ({\n  calcular\n}) => {\n  const [minimumInvestment, setMinimumInvestment] = useState('');\n  const [payout, setPayout] = useState('');\n  const [stepsN, setStepsN] = useState('');\n  const [maximumInvestment] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    calcular(minimumInvestment, payout, stepsN, maximumInvestment);\n  };\n\n  const [error, setError] = useState();\n\n  function handleStepsN(stepsN, name) {\n    if (isNaN(stepsN)) {\n      setError(`${name} field can only be number`);\n    }\n\n    if (stepsN > 30) {\n      //alert(\"numero de passos excedido\")\n      return 0;\n    } else {\n      setStepsN(stepsN);\n    }\n  }\n\n  console.log(payout);\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, \"Investimento M\\xEDnimo:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"exemplo 10.00\",\n    onChange: e => setMinimumInvestment(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, \"Rendimento:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \" % exemplo 70\",\n    onChange: e => setPayout(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, \"N\\xFAmero de Passos: \"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \" exemplo 5\",\n    onChange: e => handleStepsN(e.target.value, e.target.name),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 3\n    }\n  }), error !== \"\" ? error : \"\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"btn\",\n    type: \"submit\",\n    value: \"calcular\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default Form;","map":{"version":3,"sources":["/Users/Raila/martingale-calculator/src/components/Form/index.js"],"names":["React","useState","Form","calcular","minimumInvestment","setMinimumInvestment","payout","setPayout","stepsN","setStepsN","maximumInvestment","handleSubmit","e","preventDefault","error","setError","handleStepsN","name","isNaN","console","log","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;AAEA,MAAMC,IAAI,GAAE,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAe;AACvB,QAAM,CAACC,iBAAD,EAAoBC,oBAApB,IAA4CJ,QAAQ,CAAC,EAAD,CAA1D;AACA,QAAM,CAACK,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACO,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACS,iBAAD,IAAsBT,QAAQ,CAAC,EAAD,CAApC;;AAEA,QAAMU,YAAY,GAAGC,CAAD,IAAM;AACtBA,IAAAA,CAAC,CAACC,cAAF;AACAV,IAAAA,QAAQ,CAACC,iBAAD,EAAoBE,MAApB,EAA4BE,MAA5B,EAAoCE,iBAApC,CAAR;AAGH,GALD;;AAOA,QAAM,CAACI,KAAD,EAAOC,QAAP,IAAmBd,QAAQ,EAAjC;;AACA,WAASe,YAAT,CAAsBR,MAAtB,EAA6BS,IAA7B,EAAkC;AAChC,QAAIC,KAAK,CAACV,MAAD,CAAT,EAAmB;AACjBO,MAAAA,QAAQ,CAAE,GAAEE,IAAK,2BAAT,CAAR;AACD;;AAED,QAAIT,MAAM,GAAC,EAAX,EAAc;AACZ;AAGD,aAAO,CAAP;AAEA,KAND,MAMK;AAEHC,MAAAA,SAAS,CAACD,MAAD,CAAT;AACD;AAEF;;AACDW,EAAAA,OAAO,CAACC,GAAR,CAAYd,MAAZ;AACF,sBACE;AAAM,IAAA,QAAQ,EAAEK,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADA,eAEA;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,WAAW,EAAC,eAA/B;AAA+C,IAAA,QAAQ,EAAEC,CAAC,IAAIP,oBAAoB,CAACO,CAAC,CAACS,MAAF,CAASC,KAAV,CAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,eAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAHA,eAIA;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,WAAW,EAAC,eAA/B;AAA+C,IAAA,QAAQ,EAAEV,CAAC,IAAIL,SAAS,CAACK,CAAC,CAACS,MAAF,CAASC,KAAV,CAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJA,eAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BALA,eAON;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,WAAW,EAAC,YAA/B;AAA4C,IAAA,QAAQ,EAAEV,CAAC,IAAII,YAAY,CAACJ,CAAC,CAACS,MAAF,CAASC,KAAV,EAAiBV,CAAC,CAACS,MAAF,CAASJ,IAA1B,CAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPM,EAQLH,KAAK,KAAG,EAAR,GAAYA,KAAZ,GAAkB,EARb,CADJ,eAWI;AAAQ,IAAA,SAAS,EAAC,KAAlB;AAAwB,IAAA,IAAI,EAAC,QAA7B;AAAsC,IAAA,KAAK,EAAE,UAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXJ,CADF;AAeD,CA/CD;;AAiDA,eAAeZ,IAAf","sourcesContent":["import React, {useState} from \"react\";\n\nconst Form =({calcular})=> {\n    const [minimumInvestment, setMinimumInvestment] = useState('');\n    const [payout, setPayout] = useState('');\n    const [stepsN, setStepsN] = useState('');\n    const [maximumInvestment] = useState('');\n  \n    const handleSubmit =(e) =>{\n        e.preventDefault()\n        calcular(minimumInvestment, payout, stepsN, maximumInvestment);\n\n    \n    }\n\n    const [error,setError] = useState();\n    function handleStepsN(stepsN,name){\n      if (isNaN(stepsN)) {\n        setError(`${name} field can only be number`);\n      }\n     \n      if (stepsN>30){\n        //alert(\"numero de passos excedido\")\n     \n    \n       return 0;\n      \n      }else{\n\n        setStepsN(stepsN);\n      }\n     \n    }\n    console.log(payout)\n  return (\n    <form onSubmit={handleSubmit}>\n        <div className=\"input-block\">\n        <label>Investimento Mínimo:</label>\n        <input type=\"text\" placeholder=\"exemplo 10.00\" onChange={e => setMinimumInvestment(e.target.value)}></input>\n        <label>Rendimento:</label>\n        <input type=\"text\" placeholder=\" % exemplo 70\" onChange={e => setPayout(e.target.value,)}></input>\n        <label>Número de Passos: </label>\n\n  <input type=\"text\" placeholder=\" exemplo 5\" onChange={e => handleStepsN(e.target.value, e.target.name)} ></input> \n  {error!==\"\"? error:\"\"}\n        </div>\n        <input  className=\"btn\" type=\"submit\" value =\"calcular\"></input>\n    </form>\n  );\n}\n\nexport default Form"]},"metadata":{},"sourceType":"module"}